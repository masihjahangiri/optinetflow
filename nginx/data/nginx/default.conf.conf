map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
    server_name "~^www\.(.*)$" ;
    return 301 $scheme://$1$request_uri ;
}

server {
    listen 8080;
    listen [::]:8080;
    server_tokens off;

    location /test {
        return 200 'test';
    }

    location /stub_status {
        stub_status;
    }
}

server {
    listen 80;
    listen [::]:80;
    server_name minio.${MAIN_DOMAIN};
    
    location / {
        proxy_pass  http://${MINIO_HOST}:9001;
        include conf.d/proxy.nginx.conf;
    }
}



server {
    listen 80;
    listen [::]:80;
    server_name ~^.*$;

    
    location /file/ {
        proxy_pass  http://${MINIO_HOST}:9000/;
        include conf.d/proxy.nginx.conf;
    }

    location /api/ {
        proxy_pass  http://${BACKEND_HOST}:${BACKEND_PORT}/;
        include conf.d/proxy.nginx.conf;
    }

    root /var/www/panel;
    index  index.html;
    rewrite_log on;

    location /_next/ {
        # Cache _next folder contents (static assets like JS, CSS, etc.)
        expires 1y;
        add_header Cache-Control "public, no-transform, immutable";
    }
    
    location / {
        try_files $uri $uri.html $uri/ @nextjs;
        add_header Cache-Control "public, max-age=600, must-revalidate"; # Cache HTML for 10 mins
    }
    
    location @nextjs {
        rewrite ^(.*)$ /index.html break;
    }

    # Serve JavaScript, CSS, and other assets with long-term caching
    location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|otf|svg|mp4|webm|avif|webp)$ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Enable Brotli Compression (if supported)
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_vary on;

    brotli on;
    brotli_types text/plain text/css application/json application/javascript text/xml application/xml+rss text/javascript;
}
